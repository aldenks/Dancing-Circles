// Generated by CoffeeScript 1.6.3
(function() {
  var ANIM_TIME, HEIGHT, MAX_CIRCLE_COUNT, TICK_INTERVAL, VERTICAL_MOVEMENT, WIDTH, color_at_time, color_interpolator, data, randomize_y, sin_to_unit_scale, svg, t, tick, x_scale, y_scale;

  WIDTH = document.documentElement.clientWidth;

  HEIGHT = document.documentElement.clientHeight;

  MAX_CIRCLE_COUNT = WIDTH * HEIGHT * 0.0001;

  TICK_INTERVAL = 1000;

  ANIM_TIME = 0.8 * TICK_INTERVAL;

  VERTICAL_MOVEMENT = 0.2;

  t = 0;

  data = [];

  x_scale = d3.scale.linear().range([10, WIDTH - 10]);

  y_scale = d3.scale.linear().range([10, HEIGHT - 30]);

  sin_to_unit_scale = d3.scale.linear().domain([-1, 1]);

  color_interpolator = d3.interpolateRgb("#EB0C40", "#4704D6");

  svg = d3.select("body").append("svg").attr("width", WIDTH).attr("height", HEIGHT);

  randomize_y = function(data) {
    return _.each(data, function(d) {
      var rand_y, y;
      y = d.y;
      rand_y = Math.random() * VERTICAL_MOVEMENT;
      if (y - rand_y < 0) {
        return d.y = y + rand_y;
      } else if (y + rand_y > 1) {
        return d.y = y - rand_y;
      } else {
        return d.y = Math.round(y * 100) & 1 ? y + rand_y : y - rand_y;
      }
    });
  };

  color_at_time = function(t) {
    return function(d) {
      return color_interpolator(sin_to_unit_scale(Math.sin(t * 0.4 + d.x * Math.PI * 2)));
    };
  };

  tick = function() {
    var circle;
    data.push({
      t: ++t,
      x: Math.random(),
      y: Math.random()
    });
    if (t > MAX_CIRCLE_COUNT) {
      data.shift();
    }
    randomize_y(data);
    circle = svg.selectAll("circle").data(data, function(d) {
      return d.t;
    });
    circle.transition().duration(ANIM_TIME).attr("cy", function(d) {
      return y_scale(d.y);
    }).style("fill", color_at_time(t));
    circle.enter().append("circle").attr("cx", function(d) {
      return x_scale(d.x);
    }).attr("cy", function(d) {
      return y_scale(d.y);
    }).attr("r", 0).attr("opacity", 0).style("fill", color_at_time(t)).transition().duration(ANIM_TIME).attr("r", function(d) {
      return 30 * Math.sqrt(d.x);
    }).attr("opacity", 1);
    return circle.exit().transition().duration(ANIM_TIME).attr("r", 0).attr("opacity", 0).remove();
  };

  setInterval(tick, TICK_INTERVAL);

}).call(this);
